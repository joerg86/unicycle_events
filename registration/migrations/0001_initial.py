# Generated by Django 3.0.5 on 2020-04-08 09:13

import ckeditor_uploader.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_countries.fields
import localflavor.generic.models
import registration.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(default=registration.models.generate_code, max_length=8, unique=True, verbose_name='code')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='date')),
                ('checkin_date', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='check-in date')),
                ('first_name', models.CharField(max_length=100, verbose_name='first name')),
                ('last_name', models.CharField(max_length=100, verbose_name='last name')),
                ('sex', models.CharField(blank=True, choices=[('f', 'female'), ('m', 'male')], max_length=1, null=True, verbose_name='sex')),
                ('email', models.EmailField(max_length=254, verbose_name='e-mail')),
                ('club', models.CharField(blank=True, max_length=100, verbose_name='club')),
                ('date_of_birth', models.DateField(verbose_name='date of birth')),
                ('address', models.CharField(blank=True, max_length=255, null=True, verbose_name='address')),
                ('zipcode', models.CharField(blank=True, max_length=20, null=True, verbose_name='zip code')),
                ('city', models.CharField(blank=True, max_length=100, null=True, verbose_name='city')),
                ('country', django_countries.fields.CountryField(blank=True, default='DE', max_length=2, null=True, verbose_name='country')),
                ('phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='phone')),
                ('food', models.CharField(choices=[('all', 'all'), ('v', 'vegetarian'), ('vv', 'vegan')], max_length=15, verbose_name='food')),
                ('notes', models.TextField(blank=True, verbose_name='notes')),
                ('amount', models.DecimalField(decimal_places=2, default=0, editable=False, help_text='Gesamter vom Teilnehmer zu zahlender Betrag. Wird automatisch berechnet.', max_digits=8, verbose_name='amount')),
                ('state', models.CharField(choices=[('open', 'open'), ('progress', 'in progress'), ('confirmed', 'confirmed'), ('problem', 'problem'), ('canceled', 'canceled')], default='open', max_length=15, verbose_name='state')),
                ('internal_notes', models.TextField(blank=True, verbose_name='internal notes')),
            ],
            options={
                'verbose_name': 'booking',
                'verbose_name_plural': 'bookings',
                'ordering': ('-date',),
            },
        ),
        migrations.CreateModel(
            name='Discipline',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10)),
                ('label', models.CharField(max_length=100)),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Sortierung')),
            ],
            options={
                'verbose_name': 'discipline',
                'verbose_name_plural': 'disciplines',
                'ordering': ('order', 'code'),
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(help_text="Short name for the URL, only use alphanumeric characters and dashes, e.g. 'arizona-muni-event-2021'", unique=True, verbose_name='short name')),
                ('begin_date', models.DateTimeField(verbose_name='begin date')),
                ('end_date', models.DateTimeField(verbose_name='end date')),
                ('description', models.TextField(verbose_name='description')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='logos', verbose_name='logo')),
                ('is_open', models.BooleanField(default=True, help_text='Registration is currently open')),
                ('contact_email', models.EmailField(max_length=254, verbose_name='e-mail contact')),
                ('contact_name', models.CharField(max_length=100, verbose_name='name')),
                ('host', models.CharField(help_text='name of the host', max_length=100)),
                ('paypal', models.EmailField(blank=True, help_text='Payments are sent to this address', max_length=254, verbose_name='PayPal address')),
                ('account_holder', models.CharField(blank=True, max_length=100)),
                ('bic', localflavor.generic.models.BICField(blank=True, max_length=11, verbose_name='BIC')),
                ('iban', localflavor.generic.models.IBANField(blank=True, include_countries=None, max_length=34, use_nordea_extensions=False, verbose_name='IBAN')),
                ('address_is_required', models.BooleanField(default=False, help_text='Does the post address need to be entered upon registration?', verbose_name='address is required')),
                ('phone_is_required', models.BooleanField(default=False, help_text='Does an emergency phone number need to be provided upon registration?', verbose_name='phone is required')),
                ('sex_is_required', models.BooleanField(default=False, help_text='Does the sex need to be specified upon registration?', verbose_name='sex is required')),
                ('food_is_included', models.BooleanField(default=True, help_text='Food is offered and included in the booking fee', verbose_name='food is included')),
                ('vegetarian', models.BooleanField(default=True, help_text='Vegetarian meals can be selected', verbose_name='vegetarian')),
                ('vegan', models.BooleanField(default=True, help_text="There's a vegan choice available", verbose_name='vegan')),
                ('vegan_breakfast_only', models.BooleanField(default=False, help_text='Der Benutzer wird bei der Buchung darauf hingewiesen, dass nur das Fr端hst端ck vegan ist.', verbose_name='Only vegan breakfast')),
                ('admin', models.ForeignKey(help_text='Dieser Benutzer kann das Event verwalten', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'event',
                'verbose_name_plural': 'events',
                'ordering': ('-begin_date', '-end_date'),
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kind', models.CharField(choices=[('shirt', 't-shirt'), ('accommodation', 'accommodation'), ('meal', 'meal'), ('other', 'other')], max_length=100, verbose_name='kind')),
                ('name', models.CharField(blank=True, max_length=100, verbose_name='name')),
                ('required', models.BooleanField(default=True, help_text='The participant is not allowed to deselect this product', verbose_name='required')),
                ('order', models.PositiveIntegerField(default=0)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='registration.Event')),
            ],
            options={
                'ordering': ('order', 'name'),
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('typ', models.CharField(choices=[('incoming', 'incoming payment'), ('credit', 'credit'), ('refund', 'refund'), ('other', 'other')], max_length=15, verbose_name='Typ')),
                ('mittel', models.CharField(choices=[('paypal', 'PayPal'), ('cash', 'cash'), ('wire', 'wire transfer'), ('internal', 'internal transfer')], max_length=15, verbose_name='Zahlungsmittel')),
                ('nr', models.CharField(blank=True, default='', help_text='Nr. der Transaktion beim Zahlungsdienstleister, falls vorhanden', max_length=255, verbose_name='Nr.')),
                ('betrag', models.DecimalField(decimal_places=2, default=0, help_text='Bei ausgehenden Zahlungen bitte negatives Vorzeichen benutzen', max_digits=8, verbose_name='Betrag')),
                ('gebuehr', models.DecimalField(decimal_places=2, default=0, help_text='Transaktionsgeb端hr (z.B. bei PayPal)', max_digits=8, verbose_name='Geb端hr')),
                ('grund', models.CharField(blank=True, default='', max_length=255)),
                ('datum', models.DateTimeField(default=django.utils.timezone.now)),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registration.Booking', verbose_name='Buchung')),
            ],
            options={
                'verbose_name': 'transaction',
                'verbose_name_plural': 'transactions',
                'ordering': ('-datum',),
            },
        ),
        migrations.CreateModel(
            name='Rate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=100)),
                ('dob_from', models.DateField(blank=True, null=True, verbose_name='DOB from')),
                ('dob_to', models.DateField(blank=True, null=True, verbose_name='DOB to')),
                ('non_rider', models.BooleanField(default=False, help_text='This rate is intended for people who do not actively participate (e.g. coaches, companions of minors)', verbose_name='Companion rate')),
                ('is_active', models.BooleanField(default=True, help_text='This rate can currently be booked', verbose_name='Is active')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='ordering')),
                ('disciplines', models.ManyToManyField(blank=True, help_text='Disciplines included in this rate - applies to all disciplines if left empty', to='registration.Discipline', verbose_name='discipline')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rates', to='registration.Event')),
            ],
            options={
                'verbose_name': 'rate',
                'verbose_name_plural': 'rates',
                'ordering': ('order', 'label'),
            },
        ),
        migrations.CreateModel(
            name='ProductVariant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('price', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='price')),
                ('order', models.PositiveIntegerField(default=0)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='variants', to='registration.Product')),
            ],
            options={
                'ordering': ('order', 'name'),
            },
        ),
        migrations.CreateModel(
            name='Price',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valid_from', models.DateField(blank=True, null=True, verbose_name='valid from')),
                ('valid_until', models.DateField(blank=True, null=True, verbose_name='valid until')),
                ('price_day', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='price per day')),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='total price')),
                ('rate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prices', to='registration.Rate')),
            ],
            options={
                'verbose_name': 'price',
                'verbose_name_plural': 'prices',
                'ordering': ('valid_until',),
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('document', models.FileField(upload_to='dokumente', verbose_name='Dokument')),
                ('u18', models.BooleanField(default=False, help_text='Nur relevant f端r Personen unter 18 Jahren.', verbose_name='U18')),
                ('upload', models.BooleanField(default=False, help_text='Dokument muss zur端ckgesendet werden 端ber die Upload-Funktion.', verbose_name='Upload f端r R端cksendung')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Sortierung')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='registration.Event')),
            ],
            options={
                'verbose_name': 'document',
                'verbose_name_plural': 'documents',
                'ordering': ('order', 'name'),
            },
        ),
        migrations.AddField(
            model_name='discipline',
            name='event',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='disciplines', to='registration.Event'),
        ),
        migrations.CreateModel(
            name='Day',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.CharField(max_length=100, verbose_name='Tag')),
                ('arrival', models.BooleanField(default=False, verbose_name='arrival day')),
                ('departure', models.BooleanField(default=False, verbose_name='departure day')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='order')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='days', to='registration.Event')),
            ],
            options={
                'verbose_name': 'day',
                'verbose_name_plural': 'days',
                'ordering': ('order', 'day'),
            },
        ),
        migrations.AddField(
            model_name='booking',
            name='arrival',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='booking_arrival', to='registration.Day', verbose_name='arrival'),
        ),
        migrations.AddField(
            model_name='booking',
            name='departure',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='booking_departure', to='registration.Day', verbose_name='departure'),
        ),
        migrations.AddField(
            model_name='booking',
            name='disciplines',
            field=models.ManyToManyField(blank=True, to='registration.Discipline'),
        ),
        migrations.AddField(
            model_name='booking',
            name='event',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registration.Event'),
        ),
        migrations.AddField(
            model_name='booking',
            name='rate',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='registration.Rate'),
        ),
        migrations.CreateModel(
            name='Seite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(default='home')),
                ('name', models.CharField(max_length=30)),
                ('icon', models.CharField(default='home', max_length=30)),
                ('html', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True)),
                ('order', models.PositiveIntegerField(default=0)),
                ('menu', models.BooleanField(default=True, verbose_name='Sichtbar im Men端')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seiten', to='registration.Event')),
            ],
            options={
                'verbose_name': 'Seiten',
                'verbose_name_plural': 'Seiten',
                'ordering': ('order',),
                'unique_together': {('event', 'slug')},
            },
        ),
        migrations.CreateModel(
            name='Anhang',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datei', models.FileField(upload_to=registration.models.anhang_path)),
                ('datum', models.DateTimeField(auto_now=True)),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registration.Booking')),
                ('dokument', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registration.Document')),
            ],
            options={
                'verbose_name': 'Anhang',
                'verbose_name_plural': 'Anh辰nge',
                'unique_together': {('booking', 'dokument')},
            },
        ),
    ]
